1. 配置mod_expires模块
	这个模块控制服务器应答时的Expires头内容和Cache-Control头的max-age指令。
	有效期(expiration date)可以设置为相对于源文件的最后修改时刻或者客户端的访问时刻。
	这些HTTP头向客户端表明了文档的有效性和持久性。如果有缓存，文档就可以从缓存(除已经过期)而不是从服务器读取。
	接着，客户端考察缓存中的副本，看看是否过期或者失效，以决定是否必须从服务器获得更新。

	编辑mod_expires设置文件：httpd-expires.conf

	<IfModule mod_expires.c>
		ExpiresActive on
		ExpiresDefault A300
		ExpiresByType text/html A300
		ExpiresByType image/gif A2592000
	    ExpiresByType image/jpeg A2592000
	    ExpiresByType image/png A2592000
		ExpiresByType text/css A2592000
	    ExpiresByType text/js A2592000
	    ExpiresByType text/javascript A2592000
		ExpiresByType application/x-javascript A259200
	</IfModule>
																																							 ExpiresActive：对其作用范围内的文档启用或禁用产生Expires和Cache-Control头的功能。
		若设置为Off, 则不会为其作用范围内的任何文档生成Expires和Cache-Control头(除非被更低一层的规则改写，比如.htaccess文件)。
		若设置为On, 则会按照ExpiresByType和ExpiresDefault指令定义的标准为其作用范围内的文档生成Expires和Cache-Control 头。
		注意，这个指令并不保证Expires或Cache-Control头一定会产生。如果定义的标准不规范，将不会产生这两个头，其效果是好像从未设置过这个指令一样。
		
	ExpiresByType：为指定MIME类型的文档配置Expires头的值。
		语法为：ExpiresByType MIME-type <code>second
		seconds参数设置了添加到基准时间以构造有效期限的秒数。C
		ache-Control: max-age的计算方法是从有效期减去当前请求时间并转化为秒数。

		基准时刻可以是源文件的最后修改时刻或者客户端对源文件的访问时刻，至于使用那一个则由<code>指定。
			"M"表示源文件的最后修改时刻 --- 这个可能对定期更新的URL(比如位于同一位置的每周通告)很有好处
			"A"表示客户端对源文件的访问时刻 --- 每个客户端所得到的有效期是不一样的，这个可能对那些几乎不更新的图片文件很有好处，

	ExpiresDefault：设置其作用范围内的所有文档的默认有效期的计算方法，它可以被ExpiresByType指令基于MIME类型被改写。
		语法为：ExpiresDefault <code>seconds
		<code>seconds同ExpiresByType一致。
