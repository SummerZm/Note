拓扑排序
===========================================================
A. 拓扑排序的精要
	a. 拓扑排序作为一种利用数据元素中【某个属性的偏序关系】得到数据元素的【全排序序列】的方法。
	
		
B. 拓扑排序的要求
	a. 图中的每个顶点在序列中只出现一次；
	b. 对于图中任意一条有向边 (u, v) ∈ E，在该序列中顶点 u 一定位于顶点 v 之前
		
C. 拓扑排序的应用
	a. 拓扑排序常用于确定一个【依赖关系集】中事物发生的顺序
	b. AOV网 --（Activity On Vertex Network）-- 顶点表示活动网
	c. 判断图中是否有环路

D. 拓扑排序基本步骤
	a. 初始化有向图；
	b. 将有向图中没有前驱（入度为 0）的顶点压入栈中；
	c. 将栈顶元素出栈，输出该节点，并遍历其所有邻接顶点，将每个邻接顶点的入度减 1（相当于删除该顶点发出的所有有向边），如果某个邻接顶点的入度被减为 0，那么将该邻接顶点入栈；
	d. 重复步骤3，直到栈为空
	e. 图中还有未输出的顶点，但是入度都不为 0，则说明有向图中存在环路。
	
E. 按照开始时间对活动进行拓扑排序案例：
	a. 栈的设计
		1. 带优先级的队列能够保证顶点入栈时根据开始时间的顺序插入到队列中适当的位置上
		2. 出栈时总是开始时间最早的顶点先出栈（被处理），这样就达到了既满足拓扑序列的条件，又按照开始时间有序的目的。
		
	b. 图的数据模型
		1. 使用邻接表的方式表示本算法用到的图。邻接表突出的是图中顶点的关系，更适合 AOV 网的气质。
		
	c. 计算开始时间
		1. 项目中每个活动的开始时间受前置活动的约束，不可能随时开始，但是活动的开始时间可以根据前置活动之间的关系推算出来
			-- 如果一个活动没有前驱活动，则这个活动的开始时间是 0；
			-- 如果一个活动有前驱活动，则这个活动的开始时间是前驱活动的开始时间与前驱活动持续时间的和；
			-- 如果一个活动有多个前驱活动，则这个活动的开始时间是这些和中最大的一个。
			











